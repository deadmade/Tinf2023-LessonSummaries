{"path":"DHBW Heidenheim/2025 WiSe/Datenbanken/Skript/Datenbanken (Englisch)/LESSON 04.pdf","text":"LESSON 4 LEFT JOIN, RIGHT JOIN, AND FULL OUTER JOIN Ihor Liutak Content 1. LEFT JOIN (LEFT OUTER JOIN) 2. RIGHT JOIN (RIGHT OUTER JOIN) 3. FULL OUTER JOIN Datenbanken II 2 Content Short description Teach students the purpose and syntax of Left Join, Right Join, and Full Outer Join. Explain the differences between these joins and when to use them. Provide hands-on exercises to reinforce understanding of join operations. Kurzbeschreibung Bringen Sie den Schülern den Zweck und die Syntax von Left Join, Right Join und Full Outer Join bei. Erklären Sie die Unterschiede zwischen diesen Verknüpfungen und wann sie zu verwenden sind. Bieten Sie praktische Übungen an, um das Verständnis von Verknüpfungsvorgängen zu festigen. LEFT JOIN (LEFT OUTER JOIN) Datenbanken II 3 Definition: Returns all rows from the left table and the matching rows from the right table. If no match exists, NULL is returned for columns of the right table Syntax: SELECT columns FROM table1 LEFT JOIN table2 ON table1.column = table2.column; LEFT JOIN (LEFT OUTER JOIN) 2 Datenbanken II 4 Example: SELECT students.name, enrollments.course FROM students LEFT JOIN enrollments ON students.student_id = enrollments.student_id; Result: name | course ---------------- John | Math Alice | Science Bob | NULL students student_id | name ----------------- 1 | John 2 | Alice 3 | Bob enrollments student_id | course ------------------- 1 | Math 2 | Science RIGHT JOIN (RIGHT OUTER JOIN) Datenbanken II 5 Definition: Returns all rows from the right table and the matching rows from the left table. If no match exists, NULL is returned for columns of the left table. Syntax: SELECT columns FROM table1 RIGHT JOIN table2 ON table1.column = table2.column; RIGHT JOIN (RIGHT OUTER JOIN) 2 Datenbanken II 6 Example: SELECT students.name, enrollments.course FROM students RIGHT JOIN enrollments ON students.student_id = enrollments.student_id; Result: name | course ---------------- John | Math Alice | Science NULL | Physics students student_id | name ----------------- 1 | John 2 | Alice 3 | Bob enrollments student_id | course ------------------- 1 | Math 2 | Science 3 | Physics FULL OUTER JOIN Datenbanken II 7 Definition: Combines the results of LEFT JOIN and RIGHT JOIN. Returns all rows from both tables, with NULL for unmatched rows in either table. Syntax: SELECT columns FROM table1 FULL OUTER JOIN table2 ON table1.column = table2.column; FULL OUTER JOIN Datenbanken II 8 Example: SELECT students.name, enrollments.course FROM students FULL OUTER JOIN enrollments ON students.student_id = enrollments.student_id; Result: name | course ---------------- John | Math Alice | Science Bob | NULL NULL | Physics students student_id | name ----------------- 1 | John 2 | Alice 3 | Bob enrollments student_id | course ------------------- 1 | Math 2 | Science 4 | Physics Simulating FULL OUTER JOIN Datenbanken II 9 In MySQL, simulate with UNION: SELECT students.name, enrollments.course FROM students LEFT JOIN enrollments ON students.student_id = enrollments.student_id UNION SELECT students.name, enrollments.course FROM students RIGHT JOIN enrollments ON students.student_id = enrollments.student_id; The UNION operator in MySQL is used to combine the result sets of two or more SELECT statements into a single result set. It removes duplicate rows between the SELECT statements. Each SELECT statement within the UNION must have the same number of columns in the result sets with similar data types.","libVersion":"0.3.2","langs":""}