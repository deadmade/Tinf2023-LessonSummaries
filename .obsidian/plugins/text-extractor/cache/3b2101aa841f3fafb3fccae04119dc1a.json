{"path":"DHBW Heidenheim/2025 WiSe/Datenbanken/Skript/Datenbanken (Englisch)/LESSON 09.pdf","text":"LESSON 9 Defining Relationships and Constraints Ihor Liutak Content Primary and Foreign Keys, Cascading Updates/Deletes Relationships define how tables are connected in a relational database. Why Relationships? Ensure data consistency. Reduce redundancy. Allow complex queries across related tables. Datenbanken II 2 Content A real-world analogy of relationships: Table 1: Students (e.g., name, ID) Table 2: Courses (e.g., course name, ID) Primary Keys Datenbanken II 3 Definition: A unique identifier for each row in a table. Characteristics: Must be unique. Cannot be NULL. Syntax: Foreign Keys Datenbanken II 4 Definition: A column (or set of columns) that establishes a relationship between two tables. Purpose: To enforce referential integrity. Syntax: Cascading Updates Datenbanken II 5 Definition: Automatically updates foreign key values when the primary key is updated. Purpose: Maintain referential integrity without manual updates. Syntax: Cascading Deletes Datenbanken II 6 Definition: Automatically deletes rows in a foreign key table when the corresponding primary key is deleted. Syntax: Common Constraints Datenbanken II 7 NOT NULL: Ensures a column cannot have a NULL value. UNIQUE: Ensures all values in a column are unique. DEFAULT: Provides a default value for a column. CHECK: Ensures values in a column meet a condition. Example Datenbanken II 8 We need to design an Entity-Relationship Model (ERD) for a library system, taking into account the following: Key Entities and Relationships : Students borrow books from the library. Each book can be borrowed by one student at a time, but a student can borrow multiple books. A student might violate return rules by not returning books on time. The system must record information about these violations (e.g., date, type of violation, and penalties). Functional Requirements : Track book borrowing activities. Record violations of book return deadlines. Notify students and library authorities about overdue books. Enforce relationships, including cardinalities and constraints (e.g., one-to-many, many-to-one). Database Constraints : Use specialization for defining specific roles (e.g., overdue borrowers). Ensure referential integrity using primary and foreign keys. Identify Entities and Attributes Datenbanken II 9 Students: StudentID (Primary Key) FirstName LastName Email PhoneNumber Books : BookID (Primary Key) Title Author ISBN AvailableCopies Borrowing Records : BorrowID (Primary Key) StudentID (Foreign Key referencing Students) BookID (Foreign Key referencing Books) BorrowDate ReturnDate Status (Returned, Overdue) Violations : ViolationID (Primary Key) BorrowID (Foreign Key referencing BorrowingRecords) ViolationDate PenaltyAmount Define Relationships Datenbanken II 10 Students → BorrowingRecords : A student can have multiple borrowing records (1:N relationship). Books → BorrowingRecords : A book can appear in multiple borrowing records but only one active borrowing at a time (1:N relationship). BorrowingRecords → Violations : A borrowing record can have zero or more violations (1:N relationship). Entity-Relationship Model (ERD) Datenbanken II 11 Datenbanken II 12 MySQL Schema Datenbanken II 13 Example Queries Datenbanken II 14 Find All Overdue Books","libVersion":"0.3.2","langs":""}