{"path":"DHBW Heidenheim/2025 WiSe/Technische Informatik II/Skript/2a Flags.pdf","text":"Studiengang Informatik Ganze positive Zahlen • Die Menge der ganzen positiven Zahlen ist unendlich. • Im Computer können wir aber, bedingt durch die Wortbreite eines Rechners, nur endliche Zahlen bis zur Größe der Wortbreite darstellen. • Wir haben es daher nicht mit einem Zahlenstrahl zu tun, sondern mit einem Zahlenkreis pro Maschinenwort (hier: 4 Bit, 0…15) Dr. Sabine Berninger Rechnerarchitektur 1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 Zahlenkreis für 4-Bit-Zahlen Studiengang Informatik Addition und Subtraktion Im Zahlenkreis lassen sich Addition und Subtraktion durch Drehungen darstellen. 2 Addition Subtraktion Dr. Sabine Berninger Rechnerarchitektur Studiengang Informatik Überschreitungen des Zahlenbereichs 3 • Bsp. Uhr: 19 Uhr + 9 Stunden= 28 Uhr??? • Die Addition zweier Zahlen, deren Ergebnis den Zahlenbereich überschreitet, führt auf den ersten Blick zu keinem sinnvollen Ergebnis. • Die Information, dass der Zahlenbereich überschritten wurde, wird im Carry Flag (Übertragsflag) der CPU gespeichert. • Das Ergebnis und das Carry-Flag kann für weitere Rechnungen herangezogen werden, so dass selbst bei beschränktem Zahlenbereich beliebig genaue Rechnungen möglich sind 9 + 9 = 2? 9 + 9 = 2 + Carry = 2 + 16 = 18 Dr. Sabine Berninger Rechnerarchitektur Studiengang Informatik Einführung von Negativen Zahlen 4 • Im Bereich der positiven Zahlen inkl. Null ist die Subtraktion nur mit positivem Ergebnis definiert • Negative Ergebnisse sind erst bei einer Erweiterung des Zahlenbereichs auf negative Zahlen sinnvoll. • Die negativen Zahlen müssen nun auf einen Bereich des vorhandenen (binären) Wertebereichs abgebildet werden • Das Verwenden des höchstwertigen Bit als Vorzeichen reduziert den positiven Wertebereich um 1 Bit, erlaubt aber den gleichen reduzierten Wertebereich im 2er-Komplement als negativ anzusehen • Addition und Subtraktion bleiben dann gleich 0 - 1 = 15? 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 1000 1001 1010 1011 1100 1101 1110 1111 0000 0001 0010 0011 0100 0101 0110 0111 8 9 10 11 12 13 14 15 Dr. Sabine Berninger Rechnerarchitektur Studiengang Informatik Die Einbettung der negativen Zahlen • Das Problem dieser Einbettung ist, dass der Bereich der positiven Zahlen nur noch halb so groß ist • Eine Addition zweier positiver Zahlen im Maschinenwort kann eine negative Zahl als Ergebnis haben • Wieder wird der Übertrag im Statusregister gespeichert, dieses mal als Overflow Flag (Überlauf Flag) • Das Overflow Flag wird immer dann gesetzt, wenn die Summe 2er positiver Zahlen eine negative Zahl oder die Summe 2er negativer Zahlen eine positive Zahl ergibt 5Dr. Sabine Berninger Rechnerarchitektur Studiengang Informatik Die Negation • Eine wichtige Umrechnung ist es, zu einer Zahl das negative Äquivalent zu bestimmen. • Es ist leicht zu sehen, dass die Zahl -2 überall dort eine Eins hat, wo die Zahl +1 eine Null besitzt. Das gleiche gilt für -4 und +3 und für alle weiteren Zahlen. • Wir können daher eine Zahl negieren, indem wir das 1er-Komplement der Zahl bilden (alle 0 durch 1 und alle 1 durch 0 ersetzen) und zu der erhaltenen Zahl 1 addieren: 1er-Komplement + 1 • Man nennt diese Operation auch die Bildung des 2er-Komplements. 6 dez. binär dez. negiert binär negiert 0 0000 0 0000 1 0001 -1 1111 2 0010 -2 1110 3 0011 -3 1101 4 0100 -4 1100 5 0101 -5 1011 6 0110 -6 1010 7 0111 -7 1001 8 1000 -8 1000 Dr. Sabine Berninger Rechnerarchitektur Studiengang Informatik Zusammenfassung binäre Zahlen Übertrag (Carry, C): falls bei Operationen mit als vorzeichenlos angesehenen Zahlen der Wertebereich überschritten wird. 7 Überlauf (Overflow): falls bei Operationen von 2er-Komplement-Zahlen der (reduzierte) Wertebereich gewechselt wird. Rechnen mit Zahlen ohne Vorzeichen (unsigned, voller Wertebereich): Beachten bei Zahlen mit Vorzeichen (signed, 2er-Komplement): 4 – 2 = 4 + (-2) = 4 + 14 = 2 und C 4 – 6 = 4 + (-6) = 4 + 10 = 14 Dr. Sabine Berninger Rechnerarchitektur Studiengang Informatik Binäre Rechenoperationen im Rechner Das Carry-Flag (C) Das Carry-Flag ist eine Information, die im Statusregister einer CPU gespeichert wird. Das Carry-Flag wird gesetzt: • bei einer Addition auf den Übertrag aus dem höchsten Bit (Substraktionen führen manche Prozessoren als Addition des negierten Operanden durch: Carry wird prozessorspezifisch unterschiedlich gesetzt) • bei einer Schiebeoperation nach links, auf den Wert des zuletzt nach links aus dem Wort herausgeschobenen Bits • bei einer Schiebeoperation nach rechts, auf den Wert des zuletzt nach rechts aus dem Wort geschobenen Bits • bei einer Rotationsoperation auf das zuletzt aus dem Wort hinausrotierten Bits Dr. Sabine Berninger Rechnerarchitektur 8 C Wortbreite Studiengang Informatik Addition und Subtraktion im Rechner • Die Addition im Rechner wird nach dem gleichen Verfahren durchgeführt wie die schriftliche Addition • Die Subtraktion kann zurückgeführt werden auf eine Negation des Subtrahenden und eine anschließende Addition: a – b = a + (-b) Dr. Sabine Berninger Rechnerarchitektur 9 3-5: 0 0 1 1 1 - 01 1 0 1 ------------------- (1) 1 1 1 0 3+ (-5): 0 0 1 1 0 + 1 01 11 1 ------------------- (0) 1 1 1 0 Studiengang Informatik Übung Wertebereich: 4 Bit, vorzeichenbehaftet Dr. Sabine Berninger Rechnerarchitektur 10 4 + 3 = ? A: 7, CY=0 B: 7, CY=1 C: -7, CY=0 Studiengang Informatik Übung Wertebereich: 4 Bit, vorzeichenbehaftet Dr. Sabine Berninger Rechnerarchitektur 12 4 + 7 = ? A: 11, CY=1 B: -5, CY=1 C: -5, CY=0 D: -4, CY=0 E: -4, CY=1 Studiengang Informatik Übung Wertebereich: 4 Bit, vorzeichenbehaftet Dr. Sabine Berninger Rechnerarchitektur 14 -8 + -8 = ? A: 16, CY=1 B: 0, CY=1 C: -5, CY=0 D: -7, CY=0 E: 0, CY=0 Studiengang Informatik Übung Wertebereich: 4 Bit, vorzeichenbehaftet Dr. Sabine Berninger Rechnerarchitektur 16 3 – 5 = ? A: -2, CY=0 B: 2, CY=1 C: 2, CY=0 D: -2, CY=1 E: 0, CY=0 Studiengang Informatik Übung Wertebereich: 4 Bit, vorzeichenlos Dr. Sabine Berninger Rechnerarchitektur 18 14 + 3 = ? A: 2, CY=0 B: 2, CY=1 C: 1, CY=1 D: -2, CY=1 E: 1, CY=0 Studiengang Informatik Setzen der Flags durch den ARM-Prozessor Dr. Sabine Berninger Rechnerarchitektur 20 4-Bit- Operation Ergebnis (signed) Ergebnis (unsigned) negative N (signed) zero Z carry C(Y) (unsigned Addit.) overflow V (signed) 0 - 1 -1 15 1 0 0 0 5 + 7 -4 12 1 0 0 1 7 + 10 - 1 0 0 1 0 5 + 1 6 6 0 0 0 0 5 - 1 4 4 0 0 1 0 Flags Studiengang Informatik Das Overflow-Flag (V) Das Overflow-Flag zeigt eine Überschreitung des Zahlenbereichs bei einer signed Addition (oder einer signed Subtraktion) an. Das Overflow-Flag wird gesetzt, wenn: • Die Addition zweier positiver Zahlen ein negatives Ergebnis hat (4+7 im 4-Bit-Bereich) • Die Addition zweier negativer Zahlen ein positives Ergebnis hat (-8 + -8 im 4-Bit-Bereich) • (Subtraktion ist die Addition einer negativen Zahl) Dr. Sabine Berninger Rechnerarchitektur 21Studiengang Informatik Das Overflow-Flag wird gesetzt, wenn Carryin ungleich Carryout ist.: 7 + 7 = -2 -5 + -5 = +6 3 + -5 = -2 0 1 1 1 1 0 1 1 0 0 1 1 +00111111 + 11001111 + 01001111 1 1 1 0 0 1 1 0 1 1 1 0 Das Overflow-Flag (V): Berechnungstip Dr. Sabine Berninger Rechnerarchitektur 22 Carryout = Carry Carryin Studiengang Informatik Die Negation Die Negation einer Zahl, d. h. die Wandlung von einer positiven in eine negative Zahl (2er-Komplement) oder umgekehrt, ist bei manchen Prozessoren als eigener Befehl vorhanden. Andere Prozessoren wie ARM führen die Negation auf eine Subtraktion zurück: NEG(x) = 0 + (– x) Dr. Sabine Berninger Rechnerarchitektur 23Studiengang Informatik Logische Befehle AND und OR Neben den Additions- und Subtraktionsbefehlen besitzt jede CPU noch einen Satz von logischen Befehlen: Dr. Sabine Berninger Rechnerarchitektur 24 AND Bitweise Berechnung eines logischen UND OR Bitweise Berechnung eines logischen ODER: mindestens ein Operand ist 1 Studiengang Informatik Logische Befehle XOR und NOT Dr. Sabine Berninger Rechnerarchitektur 25 XOR Bitweise Berechnung eines logischen XOR Genau ein Operand ist =1 NOT • Bitweise Berechnung eines logischen NOT • Dieser Befehl ist nicht bei allen Prozessoren vorhanden, da er durch ein XOR mit -1 erzeugt werden kann Studiengang Informatik Das Zero-Flag (Z) • Das Null-Flag zeigt an, ob das Ergebnis einer Operation gleich 0 war. • Dieser Sonderfall als Ergebnis einer Berechnung ist insbesondere für die Prüfung von Schleifenbedingungen und anderen bedingten Sprüngen von Bedeutung. Diese müssen aufgrund ihres häufigen Auftretens besonders effizient erfolgen können. Mittels des Null-Flags kann diese Prüfung mit minimalem Aufwand durchgeführt werden. • Berechnung: OR aller Ergebnis-Bits, Invertiert • Ergebnisse stehen bei primitiven Rechnern im Akkumulator, deshalb alternative Darstellung des Zero-Flags: ACCZ Dr. Sabine Berninger Rechnerarchitektur 26Studiengang Informatik Das Negativ-Flag (N) Das Negativ-Flag (auch Sign-Flag) gibt an, ob der Wert (eines Ergebnisses, einer Berechnung) negativ ist. Wenn das oberste Bit (MSB) 1 ist, ist der Wert negativ, und das Flag wird gesetzt. Alternative Darstellung: ACC15 (bei 16 Bit Wortbreite) Dr. Sabine Berninger Rechnerarchitektur 27Studiengang Informatik Multiplikation mit 2 • Die Multiplikation mit 2 entspricht im binären Zahlensystem einer Schiebeoperation nach links (wie im Dezimalsystem die Multiplikation mit 10). • Eine Schiebeoperation füllt die niederwertigen Positionen mit 0 auf. • Die Informationen in den hochwertigen Bits gehen verloren, bis auf den letzten Übertrag, der im Carry-Flag gespeichert werden kann. Dr. Sabine Berninger Rechnerarchitektur 28","libVersion":"0.3.2","langs":""}